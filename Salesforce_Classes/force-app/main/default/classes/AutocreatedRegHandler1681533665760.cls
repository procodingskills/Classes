//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AutocreatedRegHandler1681533665760 implements Auth.RegistrationHandler{
global boolean canCreateUser(Auth.UserData data) {
	//TODO: Check whether we want to allow creation of a user with this data
	//Set<String> s = new Set<String>{'usernamea', 'usernameb', 'usernamec'};
	//if(s.contains(data.username)) {
		//return true;
	//}
	return true;
}

global User createUser(Id portalId, Auth.UserData data){
	User u;
	if(data.email == 'admin@procodingskills.com' || data.email == 'i.lakshmideepak@gmail.com'){
		u = [SELECT Id FROm User WHERE Id='0052w00000GwHLf'];
	}
	else{
		u = [SELECT Id FROM User WHERE Id='0052w00000Gx2JT'];
	}
	
	return u;
}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
	User u = new User(id=userId);
	//TODO: Customize the username. Must be 80 characters or less.
	//u.username = data.username + '@myorg.com';
	u.email = data.email;
	u.lastName = data.lastName;
	u.firstName = data.firstName;
	//String alias = data.username;
	//Alias must be 8 characters or less
	//if(alias.length() > 8) {
		//alias = alias.substring(0, 8);
	//}
	//u.alias = alias;
	//update(u);
}
}